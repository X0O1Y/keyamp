#+title: Emacs and Keyboards
#+author: Yegor Maltsev

You need [[http://xahlee.info/emacs/misc/xahemacs.html][XahEmacs]] or [[https://github.com/xahlee/xah-fly-keys][xah-fly-keys]]. Below some features how to use it.

** Features
- Macbook efficient setup
- iOS setup
- [[https://github.com/philc/vimium][Vimium]] bindings inspired by [[https://github.com/xahlee/xah-fly-keys][xah-fly-keys]]
- More keyboards and options

* Macbook efficient setup

Thumb cluster for common keyboard, no heavy pinky use, arrows on home row, number row by touch and more.

- Karabiner config file: [[karabiner.json]]
- [[http://www.keyboard-layout-editor.com/#/gists/e7927c1676fbf713531d43c3db9ca4c1][Layout]]:
[[macbook.png]]

- Translate „ÄêCommand ‚åò„Äë to „ÄêControl ^„Äë e.g. s-u to C-u
  - basically you need only *single* ¬´control¬ª key for GUI: „ÄêCommand ‚åò„Äë
  #+begin_src elisp
  (define-key key-translation-map (kbd "s-2")      (kbd "C-2"))
  (define-key key-translation-map (kbd "s-3")      (kbd "C-3"))
  (define-key key-translation-map (kbd "s-4")      (kbd "C-4"))
  (define-key key-translation-map (kbd "s-5")      (kbd "C-5"))
  (define-key key-translation-map (kbd "s-6")      (kbd "C-6"))
  (define-key key-translation-map (kbd "s-7")      (kbd "C-7"))
  (define-key key-translation-map (kbd "s-8")      (kbd "C-8"))
  (define-key key-translation-map (kbd "s-9")      (kbd "C-9"))
  (define-key key-translation-map (kbd "s-0")      (kbd "C-0"))
  (define-key key-translation-map (kbd "s-q")      (kbd "C-q"))
  (define-key key-translation-map (kbd "s-t")      (kbd "C-t"))
  (define-key key-translation-map (kbd "s-u")      (kbd "C-u"))
  (define-key key-translation-map (kbd "s-d")      (kbd "C-d"))
  (define-key key-translation-map (kbd "s-g")      (kbd "C-g"))
  (define-key key-translation-map (kbd "s-h")      (kbd "C-h"))
  (define-key key-translation-map (kbd "s-c")      (kbd "C-c"))
  (define-key key-translation-map (kbd "s-,")      (kbd "C-,"))
  (define-key key-translation-map (kbd "s-.")      (kbd "C-."))
  #+end_src

- ¬´‚åò + ijkl ‚Üí Arrows¬ª karabiner complex modification OS wide: [[cmdijkl2arrows.json]]
- ¬´Grave accent ‚Üí Escape¬ª karabiner complex modification OS wide: [[graveaccent2esc.json]]
  - „ÄêEsc„Äë ‚Üí „ÄêFn„Äë
  - „ÄêGrave accent„Äë ‚Üí „ÄêEsc„Äë
  - „ÄêFn„Äë + „ÄêGrave accent„Äë ‚Üí „ÄêGrave accent„Äë
- „ÄêFn„Äë ‚Üí „ÄêLeft Control ^„Äë
- „ÄêLeft Control ^„Äë ‚Üí „ÄêLeft Option ‚å•„Äë
- „ÄêLeft Option ‚å•„Äë ‚Üí „ÄêBackspace ‚å´„Äë
- „ÄêBackspace ‚å´„Äë ‚Üí „ÄêDelete ‚å¶„Äë
- „ÄêRight Command ‚åò„Äë ‚Üí „ÄêF5„Äë
  - ¬´F5 ‚Üí ‚åò + ‚≠æ¬ª karabiner complex modification OS wide: [[f52cmdtab.json]]
- „ÄêRight Option„Äë ‚Üí „ÄêF7„Äë (XFK Global Leader key)
- „ÄêShift„Äë to „ÄêSticky Shift„Äë
- „ÄêCaps Lock„Äë to „ÄêHome„Äë

- Replace 3 and 8 keycaps with additional F and J ones:
  - easy to find ‚Äòhoming‚Äô key by touch

[[desktop1.png]]

* iOS setup

Emacs in pocket with unicode support. Use [[https://apps.apple.com/us/app/termius-terminal-ssh-client/id549039908][Termius]] client. Custom keyboard.

[[mobile.jpeg]]

- Set terminal and keyboard coding system to utf-8:
#+begin_src elisp
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
#+end_src
- Emacs in tmux - instant remote access. Put in .bashrc:
#+begin_src bash
  alias tmux='tmux -u'

  if [[ -z $TMUX ]] && [[ -n $SSH_TTY ]] && [[ $TERM != "dumb" ]]; then
      session=0

      if tmux has-session -t "$session" 2>/dev/null; then
          exec tmux -u a -t "$session"
      else
          exec tmux -u new-session -s "$session"
      fi
  fi
#+end_src
- Nord theme for Emacs and Termius. Works worthy for GUI and terminal.
- Color mode indicators
  - Useful for terminal without i-beam cursor shape
#+begin_src elisp
(setq xah-fly-command-mode-indicator "üü¢")
(setq xah-fly-insert-mode-indicator "üü†")
#+end_src

- Set word wrap
- Global highlight current line
- Don't show menu bar
- Use visual line

*** Custom iOS screen keyboard
- ABC and Cyrillic layouts
  - App Store: [[https://apps.apple.com/us/app/xkeyboard-custom-keyboard/id1440245962][xKeyboard - Custom Keyboard]]
  - Config file: [[ABC-–ê–ë–í.xkeyboard]]

*** Screen keyboard add-on Termius
- ‚Üë ‚Üì ^g home ctrl F7 ‚Üê ‚Üí

* Vimium bindings inspired by [[https://github.com/xahlee/xah-fly-keys][xah-fly-keys]]

- Complete config file: [[vimium-options.json]]
- [[http://www.keyboard-layout-editor.com/#/gists/5818428d1d8bcc4f7768d54720e9ef07][Bindings redesign]]:
[[vimium.png]]
#+begin_src
# unmap defaults
unmap W
unmap J
unmap P
unmap X
unmap F
unmap <c-e>
unmap <c-y>
unmap gg
unmap G
unmap zH
unmap zL
unmap yy
unmap gu
unmap gU
unmap gi
unmap <a-f>
unmap yf
unmap gf
unmap gF
unmap O
unmap B
unmap ge
unmap gE
unmap N
unmap H
unmap gt
unmap gT
unmap ^
unmap g0
unmap g$
unmap yt
unmap <a-p>
unmap <a-m>
unmap >>
unmap <<
unmap ?
unmap gs
unmap [[
unmap ]]
unmap `

# map esc to caps lock
mapkey <home> <c-[>

# right hand mappings
map i scrollPageUp
map k scrollPageDown
map j previousTab
map l nextTab
map h goBack
map ; goForward
map m scrollUp
map , scrollDown
map . toggleMuteTab
map / showHelp
map y Vomnibar.activateTabSelection
map o Vomnibar.activateInNewTab
map p visitPreviousTab
map u Vomnibar.activateInNewTab keyword=d
map n enterFindMode
map b Vomnibar.activateBookmarksInNewTab

# left hand mappings
map q togglePinTab
map w reload hard
map e scrollPageUp
map r reload
map t enterVisualMode
map a focusInput
map s LinkHints.activateModeToOpenInNewTab
map d scrollPageDown
map f LinkHints.activateMode
map g createTab
map z restoreTab
map x removeTab
map c copyCurrentUrl
map v duplicateTab

# scroll with arrows too
map <up> scrollUp
map <down> scrollDown

# navigate search results
map <right> performFind
map <left> performBackwardsFind

# navigate paginated site
map [ goPrevious
map ] goNext

map 1 LinkHints.activateMode action=focus
map 2 LinkHints.activateMode action=hover
map 3 moveTabLeft
map 4 moveTabRight
map 7 firstTab
map 8 lastTab
map 9 scrollFullPageUp
map 0 scrollFullPageDown

map <space><enter> focusInput
map <backspace><enter> focusInput
map <space>h scrollToTop
map <backspace>h scrollToTop
map <space>n scrollToBottom
map <backspace>n scrollToBottom
map <space>s LinkHints.activateModeToOpenInNewTab count=99
map <backspace>s LinkHints.activateModeToOpenInNewTab count=99
map <space>c LinkHints.activateModeToCopyLinkUrl
map <backspace>c LinkHints.activateModeToCopyLinkUrl
map <space>v LinkHints.activateModeToDownloadLink
map <backspace>v LinkHints.activateModeToDownloadLik
map <space>f LinkHints.activateModeToOpenInNewForegroundTab
map <backspace>f LinkHints.activateModeToOpenInNewForegroundTab
map <space>g Vomnibar.activateEditUrl
map <backspace>g Vomnibar.activateEditUrl
#+end_src

* More keyboards and options
- Kinesis Advantage2 [[http://www.keyboard-layout-editor.com/#/gists/6a1a62133ab9f741589bd556cb946792][layout]]:
[[advantage2.png]]

Highly recommend portable lightweight keyboard:
- [[https://www.aliexpress.com/i/32837821853.html][AVATTO A20 Portable Leather Folding Mini Bluetooth]] weight 174 g
  - Bind Caps Lock to C-p in Termius and to command mode activate
  #+begin_src elisp
  ;; same bind to caps lock in termuis
  (global-set-key (kbd "C-p")                      'xah-fly-command-mode-activate)
  #+end_src

* Common settings
Useful config additional to XahEmacs.

- Kill buffer scratch
#+begin_src elisp
(kill-buffer "*scratch*")
#+end_src
- Disable global xah math input
#+begin_src elisp
(global-xah-math-input-mode 0)
#+end_src
- Don't ask to load locked desktop file
#+begin_src elisp
(setq desktop-load-locked-desktop t)
#+end_src
- Don't ask to follow symlinks
#+begin_src elisp
(setq vc-follow-symlinks t)
#+end_src
- Ask password for gpg files
#+begin_src elisp
(setq epg-pinentry-mode 'loopback)
#+end_src
- Set location name and coordinates
#+begin_src elisp
(setq calendar-latitude 0.0)
(setq calendar-longitude 0.0)
(setq calendar-location-name "Home")
#+end_src

*** Frame title
#+begin_src elisp
(add-to-list 'default-frame-alist '(ns-transparent-titlebar . t))

(when (display-graphic-p)
  (setq display-time-default-load-average nil)
  (setq battery-mode-line-format "%p%%   ")
  (setq display-time-format "%a %e %b %R")
  (setq ns-use-proxy-icon nil)

  (setq frame-title-format
        (list
         (let ((xstr ""))
            (dotimes (_ 212) ;; align right spacer
              (setq xstr (concat " " xstr)))
            xstr)
         '(:eval mode-line-misc-info)))

  (display-battery-mode 1)
  (display-time-mode 1))
#+end_src

*** Modeline
#+begin_src elisp
(setq-default mode-line-format nil) ;; on top
(setq-default header-line-format
              (list
               " "
               ;; mode indicator
               (when (not (display-graphic-p))
                 '(:eval mode-line-front-space))

               ;; buffer name
               '(:eval (propertize " %b"
                                   'face
                                   (if (buffer-modified-p)
                                       'font-lock-string-face
                                     'font-lock-builtin-face)
                                   'help-echo
                                   (buffer-file-name)))

               ;; branch
               '(:eval (when
                           (and vc-mode
                                (not (string-equal (substring vc-mode 5) "master")))
                         (list " " (substring vc-mode 5))))

               ;; align right spacer
               '(:eval (propertize
                        " " 'display
                        `((space :align-to
                                 (- (+ right right-fringe right-margin) ,
                                    (+ (length (format-mode-line "%l:%c "))
                                       ))))))

               ;; position
               '(:eval (propertize "%l:%c "
                                   'face 'font-lock-builtin-face))
               ))
#+end_src

*** Dired
- Omit some files
#+begin_src elisp
(defun my-turn-dired-omit-mode-on ()
  "Turn dired omit mode on.
Version 2022-11-21"
  (dired-omit-mode)
  (setq dired-omit-verbose nil))

(when (string-equal system-type "darwin")
  (setq dired-use-ls-dired nil)
  (setq dired-omit-files "\\`.DS_store\\'\\|\\`.localized\\'")
  (add-hook 'dired-mode-hook 'my-turn-dired-omit-mode-on))
#+end_src
- Listing -alhG
#+begin_src elisp
(setq dired-listing-switches "-alhG")
#+end_src

*** Other
- Toggle light and dark appearance
#+begin_src elisp
(defun my-toggle-appearance ()
  "Toggle appearance.
Version 2022-08-07 2022-10-31"
  (interactive)
  (if (get 'my-toggle-appearance 'state)
      (progn
        (load-theme 'nord t)
        (put 'my-toggle-appearance 'state nil))
    (progn
      (disable-theme 'nord)
      (put 'my-toggle-appearance 'state t))))
#+end_src
- Custom python calculator
- Google translate via xah-lookup-word-on-internet
#+begin_src elisp
(defun my-translate-word-google ()
  "Lookup current word or text selection in Google Translate.
Version: 2022-10-30"
  (interactive)
  (xah-lookup-word-on-internet
   nil
   "https://translate.google.com/?sl=en&tl=ru&text=curlicue"
   nil))
#+end_src
- Alternate buffer
#+begin_src elisp
(defun my-alternate-buffer ()
  "Alternate buffer.
Version: 2022-12-16"
  (interactive)
  (switch-to-buffer (other-buffer)))

(define-key xah-fly-command-map (kbd "]")        'my-alternate-buffer)
#+end_src
